Description: CI/CD Pipeline for DragonchainSdkNode

Parameters:
  GitHubSecret:
    Type: AWS::SSM::Parameter::Value<String>
    Default: GitHubReadOnlyToken
  IntegrationTestApiKey:
    Type: AWS::SSM::Parameter::Value<String>
    Default: DragonchainNodeSdkIntegrationTestApiKey

Resources:
  UnittestCodeBuildProject:
    Type: AWS::CodeBuild::Project
    Properties:
      Name: 'dragonchain-sdk-node-unittest-codebuild-project'
      ServiceRole:
        Ref: CodeBuildRole
      Artifacts:
        Type: CODEPIPELINE
      Environment:
        Type: LINUX_CONTAINER
        ComputeType: BUILD_GENERAL1_LARGE
        Image: aws/codebuild/nodejs:8.11.0
        EnvironmentVariables:
          - Name: STAGE
            Type: PLAINTEXT
            Value: stage
        PrivilegedMode: true
      Source:
        Type: CODEPIPELINE
        BuildSpec: buildspec.unittest.yml
      TimeoutInMinutes: 10

  IntegrationCodeBuildProject:
    Type: AWS::CodeBuild::Project
    Properties:
      Name: 'dragonchain-sdk-node-integration'
      ServiceRole:
        Ref: CodeBuildRole
      Artifacts:
        Type: CODEPIPELINE
      Environment:
        Type: LINUX_CONTAINER
        ComputeType: BUILD_GENERAL1_LARGE
        Image: aws/codebuild/nodejs:8.11.0
        EnvironmentVariables:
          - Name: STAGE
            Type: PLAINTEXT
            Value: stage
          - Name: API_KEY
            Type: PLAINTEXT
            Value:
              Ref: IntegrationTestApiKey
        PrivilegedMode: true
      Source:
        Type: CODEPIPELINE
        BuildSpec: buildspec.integration.yml
      TimeoutInMinutes: 10

  StageDeployCodeBuildProject:
    Type: AWS::CodeBuild::Project
    Properties:
      Name: 'dragonchain-sdk-node-codebuild-deploy-stage'
      ServiceRole:
        Ref: CodeBuildRole
      Artifacts:
        Type: CODEPIPELINE
      Environment:
        Type: LINUX_CONTAINER
        ComputeType: BUILD_GENERAL1_LARGE
        Image: aws/codebuild/nodejs:8.11.0
        EnvironmentVariables:
          - Name: STAGE
            Type: PLAINTEXT
            Value: stage
        PrivilegedMode: true
      Source:
        Type: CODEPIPELINE
        BuildSpec: buildspec.deploy.yml
      TimeoutInMinutes: 10

  ProdDeployCodeBuildProject:
    Type: AWS::CodeBuild::Project
    Properties:
      Name: 'dragonchain-sdk-node-deploy-prod'
      ServiceRole:
        Ref: CodeBuildRole
      Artifacts:
        Type: CODEPIPELINE
      Environment:
        Type: LINUX_CONTAINER
        ComputeType: BUILD_GENERAL1_LARGE
        Image: aws/codebuild/nodejs:8.11.0
        EnvironmentVariables:
          - Name: STAGE
            Type: PLAINTEXT
            Value: prod
        PrivilegedMode: true
      Source:
        Type: CODEPIPELINE
        BuildSpec: buildspec.deploy.yml
      TimeoutInMinutes: 10

  CodePipelineRole:
    Type: AWS::IAM::Role
    Properties:
      RoleName: dragonchain-sdk-node-CodePipelineRole
      AssumeRolePolicyDocument:
        Statement:
        - Action: ['sts:AssumeRole']
          Effect: Allow
          Principal:
            Service: [codebuild.amazonaws.com, codepipeline.amazonaws.com]
        Version: '2012-10-17'
      Policies:
        - PolicyName: CodeBuildAccess
          PolicyDocument:
            Version: '2012-10-17'
            Statement:
              - Action:
                - 'logs:*'
                - 'ecs:*'
                - 'codecommit:*'
                - 'ssm:GetParameters'
                - 'ecr:*'
                - 'sts:AssumeRole'
                - 'codebuild:*'
                - 's3:*'
                Effect: Allow
                Resource: '*'

  CodeBuildRole:
    Type: AWS::IAM::Role
    Properties:
      RoleName: dragonchain-sdk-node-CodebuildRole
      AssumeRolePolicyDocument:
        Statement:
        - Action: ['sts:AssumeRole']
          Effect: Allow
          Principal:
            Service: [codebuild.amazonaws.com,  codepipeline.amazonaws.com]
        Version: '2012-10-17'
      Policies:
        - PolicyName: CodeBuildAccess
          PolicyDocument:
            Version: '2012-10-17'
            Statement:
              - Action:
                - 'logs:*'
                - 'ecs:*'
                - 'codecommit:*'
                - 'ssm:GetParameter'
                - 'ecr:*'
                - 's3:*'
                - 'cloudformation:*'
                - 'iam:*'
                - 'lambda:*'
                Effect: Allow
                Resource: '*'
              - Action:
                - route53:GetHostedZone
                - route53:ListHostedZones
                - route53:ChangeResourceRecordSets
                - route53:ListResourceRecordSets
                - acm:ListCertificates
                - cloudfront:UpdateDistribution
                - apigateway:DELETE
                - apigateway:GET
                - apigateway:POST
                - apigateway:PUT
                Effect: Allow
                Resource: '*'


  ArtifactBucket:
    Type: AWS::S3::Bucket
    Properties:
      BucketName: dragonchain-sdk-node-codebuild-artifacts

  DocsWebsiteBucket:
    Type: AWS::S3::Bucket
    Properties:
      BucketName: dragonchain-sdk-node-docs
      WebsiteConfiguration:
        IndexDocument: index.html

  ReadPolicy:
    Type: AWS::S3::BucketPolicy
    Properties:
      Bucket: !Ref DocsWebsiteBucket
      PolicyDocument:
        Statement:
        - Action: 's3:GetObject'
          Effect: Allow
          Resource: !Sub 'arn:aws:s3:::${DocsWebsiteBucket}/*'
          Principal: '*'


  CodePipeline:
    Type: AWS::CodePipeline::Pipeline
    Properties:
      Name: DragonchainSdkNodeCodePipeline
      ArtifactStore:
        Location:
          Ref: ArtifactBucket
        Type: S3  # this is literally the only possible option. https://docs.aws.amazon.com/codepipeline/latest/APIReference/API_ArtifactStore.html
      RestartExecutionOnUpdate: true
      RoleArn:
        Fn::GetAtt: CodePipelineRole.Arn
      Stages:
        - Name: Github
          Actions:
            - Name: Source
              ActionTypeId:
                Category: Source # ...guess
                Owner: ThirdParty
                Provider: GitHub
                Version: 1 # No idea!?
              Configuration:
                Owner: dragonchain-inc
                Repo: dragonchain-sdk-node
                Branch: master
                OAuthToken:
                  Ref: GitHubSecret
              OutputArtifacts:
                - Name: DragonchainSdkNode
              RunOrder: 1
        - Name: Test
          Actions:
            - Name: Unit
              ActionTypeId:
                Category: Test # ...guess
                Owner: AWS
                Provider: CodeBuild
                Version: 1 # No idea!?
              Configuration:
                ProjectName:
                  Ref: UnittestCodeBuildProject
              InputArtifacts:
                - Name: DragonchainSdkNode
              OutputArtifacts:
                - Name: BuiltDragonchainSdkNode
              RoleArn:
                Fn::GetAtt: CodePipelineRole.Arn
              RunOrder: 2
            - Name: Integration
              ActionTypeId:
                Category: Build # ...guess
                Owner: AWS
                Provider: CodeBuild
                Version: 1 # No idea!?
              Configuration:
                ProjectName:
                  Ref: IntegrationCodeBuildProject
              InputArtifacts:
                - Name: DragonchainSdkNode
              OutputArtifacts:
                - Name: TestedDragonchainSdkNode
              RoleArn:
                Fn::GetAtt: CodePipelineRole.Arn
              RunOrder: 2
        - Name: DeployDev
          Actions:
          - Name: Deploy
            ActionTypeId:
              Category: Build
              Owner: AWS
              Provider: CodeBuild
              Version: 1
            Configuration:
              ProjectName:
                Ref: StageDeployCodeBuildProject
            InputArtifacts:
              - Name: DragonchainSdkNode
            OutputArtifacts:
              - Name: DevDeploy
            RoleArn:
              Fn::GetAtt: CodePipelineRole.Arn
            RunOrder: 3
        - Name: ManualGate
          Actions:
          - Name: PromoteToProd
            ActionTypeId:
              Category: Approval
              Owner: AWS
              Provider: Manual
              Version: 1
            RoleArn:
              Fn::GetAtt: CodePipelineRole.Arn
            RunOrder: 4
        - Name: Prod
          Actions:
          - Name: Test-Build-Deploy
            ActionTypeId:
              Category: Build
              Owner: AWS
              Provider: CodeBuild
              Version: 1
            Configuration:
              ProjectName:
                Ref: ProdDeployCodeBuildProject
            InputArtifacts:
              - Name: DragonchainSdkNode
            OutputArtifacts:
              - Name: BuiltDragonchainSdkNodeProdCode
            RoleArn:
              Fn::GetAtt: CodePipelineRole.Arn
            RunOrder: 5
